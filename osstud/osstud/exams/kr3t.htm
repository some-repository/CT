<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE>KR1SOL</TITLE>
</HEAD>
<BODY bgcolor="#FFFFFF">
<P ALIGN="CENTER"><B><FONT FACE="Times New Roman"><font size="6">Контрольная работа 
  1-01</font></FONT></B></P>
<P ALIGN="CENTER"><B><FONT FACE="Times New Roman"><font size="4">Вариант 2</font></FONT></B><br>
  <B><font face="Times New Roman" size="3"></font></B></P>
  
<p>&nbsp;</p>
<OL>

<FONT FACE="Times New Roman" size=4><LI><P align="JUSTIFY"> (6 баллов) В операционных системах, поддерживающих нити исполнения (threads) внутри одного процесса на уровне ядра системы, наряду с блоками управления процессами (PCB) существуют структуры данных для управления нитями - TCB (Thread Control Block). Укажите, какие данные из перечисленных ниже, хранятся, по Вашему мнению, в TCB: </LI>
<br>&nbsp;
</FONT><OL TYPE="a"><FONT FACE="Times New Roman" size=4>
</font><FONT FACE="Times New Roman" size=4><LI>содержимое регистров процессора;</LI>
<LI>указатель на таблицу страниц памяти;</LI>
<LI>приоритет нити исполнения;</LI>
</FONT><LI><FONT FACE="Times New Roman" size=4>адрес следующей команды для выполнения (</font><FONT size=4>program counter);</font></LI>
<FONT FACE="Times New Roman" size=4><LI>указатель стека;</LI>
<LI>указатель на таблицу открытых файлов.<br>&nbsp;
</LI></font></OL>

<FONT FACE="Times New Roman" size=4><LI>(3 балла) Кратко сформулируйте разницу между понятиями мультипрограммная вычислительная система и вычислительная система с разделением времени.</LI>
<br>&nbsp;
</FONT><FONT FACE="Times New Roman" size=4><LI>(12 баллов) Пусть в вычислительную систему поступают пять процессов различной длительности по следующей схеме:<br>&nbsp;</FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=9 WIDTH=710>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="Times New Roman" size=4><P ALIGN="CENTER">Номер процесса</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="Times New Roman" size=4><P ALIGN="CENTER">Время поступления в систему</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="Times New Roman" size=4><P ALIGN="CENTER">Время исполнения</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">1</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">2</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">7</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">2</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">6</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">6</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">3</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">4</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">4</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">4</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">1</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">2</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">5</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">0</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">5</FONT></TD>
</TR>
</TABLE>

<P align="JUSTIFY"><FONT FACE="Times New Roman" size=4>Вычислите среднее время между стартом процесса и его завершением (</font><I><FONT size=4>turnaround time</font></I><FONT FACE="Times New Roman" size=4>) и</FONT><FONT size=4> </FONT><FONT FACE="Times New Roman" size=4>среднее время ожидания процесса (</FONT><I><FONT size=4>waiting time</font></I><FONT size=4>)</FONT><FONT FACE="Times New Roman" size=4> для каждого из трех алгоритмов планирования </FONT><FONT size=4>FCFS (First Come First Served), RR (Round Robin) </FONT><FONT FACE="Times New Roman" size=4>и </FONT><FONT size=4>SJF (Short Job First). </FONT><FONT FACE="Times New Roman" size=4>При вычислениях считать, что процессы не совершают операций ввода-вывода, величину кванта времени принять равной 1, временем переключения контекста пренебречь. Процесс, поступающий в систему, считать готовым к исполнению в момент поступления.</FONT><FONT size=4> </FONT><FONT FACE="Times New Roman" size=4>Для алгоритма </FONT><FONT size=4>RR </FONT><FONT FACE="Times New Roman" size=4>принять, что вновь прибывший процесс помещается в начало очереди процессов, готовых к исполнению, и</FONT><FONT size=4>,</FONT><FONT FACE="Times New Roman" size=4> следовательно, сразу выбирается на исполнение.</font></P></LI>
<FONT size=4>
</FONT><LI><FONT FACE="Times New Roman" size=4>(3 балла) Дайте краткое определение термина  "</font><FONT size=4>mutual exclusion</FONT><FONT FACE="Times New Roman" size=4> (взаимоисключение)".</font></LI><FONT FACE="Times New Roman" size=4>
<br>&nbsp;

</FONT><FONT FACE="Times New Roman" size=4><LI><P align="JUSTIFY">(18 баллов) В вычислительной системе моделируется движение самосвалов от карьера к заводу и обратно по дороге со стареньким мостом. Движение по мосту может осуществляться в обоих направлениях, но на нем не может быть одновременно более трех машин, иначе он рухнет.  Каждый самосвал представлен в системе процессом следующей структуры:</LI>
</FONT><P><I><FONT FACE="Times New Roman" size=4>Процесс i-й самосвал:</font></i></P><I>
<FONT size=4><P>While (1) {<br><dir>
&lt;доехать до моста&gt;<br>
&lt;проехать по мосту&gt;<br>
&lt;доехать до места назначения&gt;<br></dir>
}
</font></I><P align="JUSTIFY"><FONT FACE="Times New Roman" size=4>Опишите схему безопасного пересечения моста, используя семафоры. Докажите, что Ваша схема удовлетворяет условиям </font><FONT size=4>bounded waiting (</FONT><FONT FACE="Times New Roman" size=4>ограниченного ожидания</FONT><FONT size=4>) </FONT><FONT FACE="Times New Roman" size=4>и </FONT><FONT size=4>progress. </FONT><FONT FACE="Times New Roman" size=4>Если несколько процессов ожидают выполнения операции </FONT><I><FONT size=4>Signal </font></I><FONT FACE="Times New Roman" size=4>над семафором, то считайте, что процесс, который продолжит исполнение после выполнения этой операции, выбирается по принципу </FONT><FONT size=4>FIFO.</font></P>

<LI><FONT FACE="Times New Roman" size=4>(5 баллов) В вычислительной системе с сегментной организацией памяти из 32-х бит адреса старшие 9 его бит отводятся для номера сегмента.<br>&nbsp;

<OL TYPE="a">

<LI>Какое максимальное количество сегментов может иметь процесс? Каков максимальный размер сегмента?</LI>
<LI>Для некоторого процесса таблица сегментов имеет вид:<br>&nbsp;</LI></OL>
</FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=9 WIDTH=710>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="Times New Roman" size=4><P ALIGN="CENTER">Номер сегмента</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="Times New Roman" size=4><P ALIGN="CENTER">Адрес начала сегмента</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="Times New Roman" size=4><P ALIGN="CENTER">Длина сегмента</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">1</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">0x000000</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">0x100000</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">2</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">0x200000</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">0x080000</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">3</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">0x100000</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">0x080000</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">5</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">0x300000</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT size=4><P ALIGN="CENTER">0x300000</FONT></TD>
</TR>
</TABLE>
<DIR>

<FONT FACE="Times New Roman" size=4><P>Каким физическим адресам соответствуют адреса 0х245678, 0x1000006, 0x018b00de?</P></font></DIR></li>

 <LI><FONT FACE="Times New Roman" size=4> (9 баллов) Для некоторого процесса известна следующая строка запросов страниц памяти
</FONT><DIR><FONT FACE="Times New Roman" size=4>

</font><FONT size=4><P>1, 2, 0, 3, 2, 1, 3, 0, 5, 2, 7, 1, 2, 7, 0</P></font></DIR>

<P align="JUSTIFY"><FONT FACE="Times New Roman" size=4>Сколько ситуаций отказа страницы  (<I>page fault</I>) </FONT><FONT FACE="Times New Roman" size=4>возникнет для данного процесса при каждом из трех алгоритмов замещения страниц</FONT><FONT size=4> - FIFO (Fist Input Fist Output) , LRU (the Least Recently Used), OPT (optimal) , </FONT><FONT FACE="Times New Roman" size=4>если процессу выделено 3 кадра памяти?</font></P></li>


<FONT FACE="Times New Roman" size=4><LI><P align="JUSTIFY">(15 баллов) Рассмотрим вычислительную систему со страничной организацией памяти, на которой выполняется одна программа, несколько раз последовательно сканирующая большой одномерный массив данных (это означает, что для массива, занимающего, например, в памяти четыре страницы, строка запроса страниц выглядит следующим образом: 1, 2, 3, 4, 1, 2, 3, 4, ...). Для каждого из трех алгоритмов замещения страниц - FIFO (First Input First Output), LRU (the Least Recently Used) и OPT (OPTimal) нарисуйте график зависимости частоты page faults от размеров массива. По оси y откладывается отношение числа page faults к длине строки запроса (если массив, занимающий четыре страницы памяти, сканируется 2 раза, то длина строки запроса равна 8), по оси x - размер массива: от размеров, требующих одну страницу, и до размеров, значительно превыщающих размер физической памяти. Опишите наиболее характерные точки на графике.</P></LI></font></OL>

</BODY>
</HTML>
