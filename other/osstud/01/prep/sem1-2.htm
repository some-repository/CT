<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE>Семинары 1-2</TITLE>
</HEAD>
<BODY bgcolor="#FFFFFF">
<P ALIGN="CENTER"><B><FONT FACE="Times New Roman" SIZE = 6>Семинары 1-2. Введение 
        в курс практических занятий. Знакомство с операционной системой UNIX.</FONT></B></P>
<P ALIGN="CENTER">(Основываются на <a href="../../01/l1.htm">лекции 
  1</a>) </P>
  <P align="center"> <a href="../../os.html">Программа курса</a> | 
 <a href="../../03/prep/sem3-4.htm"> Следующий семинар</a></P>
<P ALIGN="CENTER"><B><font face="Times New Roman, Times, serif" size="4">Программа 
  семинаров</font></B></P>
<ol>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0101">Введение 
    в курс практических занятий.</a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0102">Краткая 
    история операционной системы UNIX, ее структура.</a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0103">Системные 
    вызовы и библиотека libc.</a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0104">Понятия 
    login'а & password'а.</a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0106">Упрощенное 
    понятие об устройстве файловой системы в UNIX. Полные имена файлов. </a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"> <a href="#s0107">Понятие 
    о текущей директории. Команда pwd. Относительные имена файлов. </a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"> <a href="#s0108">Домашняя 
    директория пользователя и ее определение.</a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0109">Команда 
    man - универсальный справочник. </a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0110">Команды 
    cd - смены текущей директории и ls - просмотра состава директории. </a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0112">Команда 
    cat и создание файла. Перенаправление ввода и вывода.</a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0114">Простейшие 
    команды работы с файлами - cp, rm, mkdir, mv.</a></font> </li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0115">История 
    редактирования файлов - ed, sed, vi.</a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0116">Система 
    Midnight Commander - mc. Встроенный mc редактор и редактор joe.</a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0117">Пользователь 
    и группа. Команды chown и chgrp. Права доступа к файлу.</a></font></li>
  <LI><font face="Times New Roman, Times, serif" size="3"><a href="#s0118">Команда 
    ls с опциями -al. Использование команд chmod и umask.</a>.</font></LI>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0119">Системные 
    вызовы getuid и getgid. </a></font></li>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0120">Компиляция 
    программ на языке C в UNIX и запуск их на счет.</a></font></li>
</ol>

<P ALIGN="CENTER"><font face="Times New Roman, Times, serif" size="3"><B><font size="4">Цели 
  занятия</font></B></font></P>
<OL>
  <LI><font face="Times New Roman, Times, serif" size="3">Научить студента входить 
    в систему. Объяснить понятия login'а & password'а. Какие они и у кого? Как 
    сменить пароли?</font></LI>
  <LI><font face="Times New Roman, Times, serif" size="3">Дать начальное понятие 
    об устройстве файловой системы в UNIX, о полных и относительных именах файлов. 
    Научить выполнять простейшие команды работы с файловой системой и <u><b>пользоваться 
    командой man.</b></u></font></LI>
  <LI><font face="Times New Roman, Times, serif" size="3">Научить студента создавать 
    и редактировать файлы.</font></LI>
  <LI><font face="Times New Roman, Times, serif" size="3">Научить компилировать 
    программу на языке С и запускать ее на исполнение.</font></LI>
  <LI><font face="Times New Roman, Times, serif" size="3">Разъяснить соотношение 
    между пользователем и группой, как пользоваться командой chmod.</font></LI>
</OL>
<P ALIGN="CENTER"><font face="Times New Roman, Times, serif" size="3"><B><font size="4">Практические 
  работы</font></B></font></P>
<OL>
  <LI><font face="Times New Roman, Times, serif" size="3"><a href="#s0105">Вход 
    в систему и смена пароля.</a> </font></LI>
	<LI><font face="Times New Roman, Times, serif" size="3"><a href="#s0108">Домашняя директория пользователя и ее определение.</a> </font></LI>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0109">Команда man - универсальный справочник. </a></font></li>
  <LI><font face="Times New Roman, Times, serif" size="3"><a href="#s0111">Путешествие 
    по директорной структуре.</a></font></LI>
  <LI><font face="Times New Roman, Times, serif" size="3"><a href="#s0113">Создание 
    файла с помощью команды cat.</a></font></LI>
  <li><font face="Times New Roman, Times, serif" size="3"><a href="#s0116">Система Midnight Commander - mc. Встроенный mc редактор и  редактор joe.</a></font></li>
  <LI><font face="Times New Roman, Times, serif" size="3"><a href="#s0118">Команда ls с опциями -al. Использование 
    команд chmod и umask.</a>.</font></LI>
  <LI><font face="Times New Roman, Times, serif" size="3"><a href="#s0121">Написание, 
    компиляция и запуск программы с использованием системных вызовов getuid() 
    и getgid().</a></font></LI>
</OL>
<P ALIGN="CENTER"><B><font face="Times New Roman, Times, serif" size="4">План
занятия</font></B></P>
<ol>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0101"></a>Введение в 
      курс практических занятий.<br>
      </b></font> <br>
      <font face="Times New Roman, Times, serif" size="3">Настоящий курс практических 
      занятий является одной из первых известных авторам попыток систематически 
      проиллюстрировать лекционный курс &quot;Введение в операционные системы&quot; 
      на примере конкретной операционной системы, а именно - операционной системы 
      UNIX.<br>
      <br>
      Необходимость систематического изложения материала семинарских и практических 
      занятий с тесной увязкой с материалом лекций всплыла перед авторами в процессе 
      становления базового 4-х семестрового набора курсов по информатике в МФТИ. 
      Новизна излагаемого материала для многих преподавателей и отсутствие опыта 
      его преподавания &nbsp;заставили лекторов для соблюдения некоторого стандарта 
      обучения готовить по каждой теме методические указания для семинаристов, 
      которые, как показал опыт, могут быть с успехом использованы и студентами. 
      Обкатанная версия этих методических указаний, расширенная, дополненная и 
      модифицированная по результатам многочисленных обсуждений находится перед 
      вами.<br>
      <br>
      Семестровый курс &quot;Введение в операционные системы&quot; является третьим 
      по счету курсом цикла &quot;Информатика&quot;, которому предшествуют курсы 
      &quot;Алгоритмы и алгоритмические языки&quot; и &quot;Архитектура ЭВМ и 
      язык ассемблера&quot;. Предполагается, что к началу практических занятий 
      этого курса студенты умеют программировать на языке С (с использованием 
      функций стандартной библиотеки для работы с файлами и строками) и имеют 
      представление о внутреннем устройстве ЭВМ.<br>
      <br>
      Переход от обучения студентов информатике с использованием mainfram'ов к 
      обучению с использованием сетевых классов персональных компьютеров, свершившийся 
      за последние двадцать лет, неизбежно наложил свой отпечаток на форму проведения 
      практических занятий. Вместо раздельного проведения семинаров и практикума 
      (лабораторных работ) появилось нечто смешанное - семинарский практикум или 
      практический семинар, когда изложение нового материала неоднократно чередуется 
      с короткими практическими программными работами, направленными на его закрепление, 
      в течение одного занятия. Именно в таком виде полу-семинаров, полу-практикумов 
      и построен наш курс. Достаточно высокая сложность используемых программных 
      конструкций подвела к идее использовать готовые примеры программ для иллюстрации 
      рассматриваемых понятий с последующей их модификацией студентами. Это позволило 
      увеличить насыщенность занятий и за семестровый курс охватить большее количество 
      материала.<br>
      <br>
      Операционная система UNIX была выбрана для иллюстрации лекций ввиду своей 
      открытости, изящности и легкости для понимания, хотя создание подобного 
      практического курса возможно и для других операционных систем, например 
      для Windows NT.<br>
      <br>
      В целом практический курс включает в себя 16 занятий, одно из которых в 
      середине семестра - <a href="../../exams/kr1h.htm">семинар 10</a> - посвящено 
      проведению контрольной работы по материалам лекций. Некоторым темам выделено 
      по 2 занятия, хотя естественно разбиение тем на занятия является достаточно 
      условным, желательно лишь, чтобы они следовали за лекциями, на которых основываются.<br>
      <br>
      За сим позвольте перейти к изложению материала семинарско-практического 
      курса.<br>
      <br>
      По своему содержанию материал текущих семинаров 1-2 является наиболее критичным 
      по отношению к используемому виду операционной системы и политике администрирования. 
      Поэтому многие разбираемые вопросы будут содержать ссылку <b><u>"узнайте 
      у своего системного администратора"</u></b>. Прежде чем приступать к занятиям, 
      необходимо обеспечить наличие пользовательских account'ов для обучающихся. 
      <b><u>&quot;Узнайте у своего системного администратора&quot;</u></b> как 
      это сделать.<br>
      <br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0102"></a>Краткая история 
      операционной системы UNIX, ее структура.<br>
      </b></font> <br>
      <font face="Times New Roman, Times, serif" size="3">На <a href="../l1.htm">первой 
      лекции</a> мы с вами разобрали содержание понятия &quot;операционная система&quot;, 
      обсудили функции операционных систем и способы их построения. Все материалы 
      первой и последующих лекций мы будем иллюстрировать практическими примерами, 
      связанными с использованием одной из разновидностей операционной системы 
      UNIX - операционной системы Linux, хотя рассказ по возможности постараемся 
      не связывать именно с ее особенностями. <br>
      <br>
      <a href="../../01/ch1.htm#l0104"><img border="0" src="../../images/bookopen.gif" 
	  alt="Строение ОС в лекции" align="right" vspace="1" hspace="10"></a> Ядро 
      операционной системы Linux представляет собой монолитную систему. При компиляции 
      ядра Linux можно разрешить динамическую загрузку и выгрузку очень многих 
      компонент ядра - так называемых модулей. В момент загрузки модуля его код 
      загружается для исполнения в привилегированном режиме и связывается с остальной 
      частью ядра. Внутри модуля могут использоваться любые экспортируемые ядром 
      функции.<br>
      <br>
      Свой современный вид эта операционная система обрела в результате длительной 
      эволюции UNIX-образных операционных систем. История развития UNIX подробно 
      освещена практически во всей печатной и электронной литературе, посвященной 
      вычислительной технике. Как правило, это во многом один и тот же текст, 
      с небольшими изменениями кочующий из издания в издание, и нам не хотелось 
      бы стать очередными в этой последовательности. Пользуясь электронной формой 
      нашего курса, мы просто сошлемся на достаточно подробное изложение в книге 
      <a  href="http://cs.mipt.ru/docs/comp/rus/os/common/nos/glava_20.htm#_5_1">Н.А. 
      Олифер, В.Г. Олифер &quot;Сетевые операционные системы&quot;</a> или на 
      оригинальную работу одного из родоначальников UNIX <a href="http://cm/bell-labs.com/cm/cs/who/dmr/hist.html">Dennis 
      M. Ritchie &quot;The Evolution of the Unix Time-sharing System&quot;</a>. 
      Достаточно наглядно эволюция UNIX может быть изображена схематически на 
      <a href="http://cs.mipt.ru/docs/comp/eng/os/unix/common/unixway/unixway.jpg">упрощенной</a> 
      или <a href="http://cs.mipt.ru/docs/comp/eng/os/unix/common/unix-history/unix-history.html">детальной</a> 
      схеме. Для нас наиболее важным во всей этой истории будет являться существование 
      двух стержневых линий эволюции - линии System V и линии BSD, поскольку в 
      процессе обучения мы будем сталкиваться с различиями в их реализации.<br>
      <br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0103"></a>Системные 
      вызовы и библиотека libc.<br>
      </b></font> <br>
      <font face="Times New Roman, Times, serif" size="3"> Основной постоянно 
      функционирующей частью операционной системы UNIX является ее ядро. Другие 
      программы (будь то системные программы или пользовательские) могут общаться 
      с ядром посредством <i>системных вызовов</i>, которые по сути дела являются 
      прямыми точками входа программ в ядро. При исполнении системного вызова 
      программа пользователя временно переходит в привилегированный режим, получая 
      доступ к данным или устройствам, которые не доступны при работе в режиме 
      пользователя. <br>
      <br>
      Реальные машинные команды, которые требуются для активизации системных вызовов, 
      естественно, отличаются от машины к машине, наряду со способом передачи 
      параметров и результатов между вызывающей программой и ядром. Однако с точки 
      зрения программиста на языке С использование системных вызовов ничем внешне 
      не отличается от использования других функций стандартной ANSI библиотеки 
      языка С, таких как, например, функции работы со строками <b><font color="#008000">strlen()</font></b>, 
      <font color="#008000"> <b>strcpy()</b></font> и т.д. Стандартная библиотека 
      в UNIX - <b><font color="#008000">libc</font></b> - обеспечивает C интерфейс 
      к каждому системному вызову. Это приводит к тому, что системный вызов выглядит 
      как функция на языке С для программиста. Более того, многие из уже известных 
      вам стандартных функций, например, функции для работы с файлами: <b><font color="#008000">fopen()</font></b>, 
      <b> <font color="#008000">fread()</font></b>, <b><font color="#008000">fwrite()</font></b> 
      при реализации в операционной системе UNIX при своей работе будут применять 
      различные системные вызовы. По ходу нашего курса нам придется ознакомиться 
      с большим количеством разнообразных системных вызовов и их C-интерфейсами. 
      <br>
      <br>
      Большинство системных вызовов, возвращающих целое значение, использует значение 
      <b> <font color="#008000">-1</font></b> при возникновении ошибки и значение 
      большее или равное <b><font color="#008000">0</font></b> при нормальном 
      завершении. Системные вызовы, возвращающие указатели, обычно для идентификации 
      ошибочной ситуации пользуются значением <b><font color="#008000">NULL</font></b>. 
      Для точного определения причины ошибки C-интерфейс предоставляет глобальную 
      переменную <b><font color="#008000">errno</font></b>, описанную в файле 
      <b><font color="#008000">&lt;errno.h&gt;</font></b> вместе с ее возможными 
      значениями и их краткими определениями. Заметим, что анализировать значение 
      переменной <b><font color="#008000">errno</font></b> необходимо сразу после 
      возникновения ошибочной ситуации, так как успешно завершившиеся системные 
      вызовы не изменяют ее значения. Для получения символьной информации об ошибке 
      на стандартном выводе программы для ошибок (по умолчанию экран вашего терминала) 
      может применяться стандартная UNIX функция <a href="../../man/perror.htm">perror()</a>.<br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0104"></a>Понятия login'а 
      &amp; password'а.<br>
      </b></font> <br>
      <font face="Times New Roman, Times, serif" size="3"> Операционная система 
      UNIX является многопользовательской операционной системой. Для обеспечения 
      безопасной работы пользователей и целостности системы любой доступ к ней 
      должен быть санкционирован. Для каждого пользователя, которому разрешен 
      вход в систему, заводится специальное регистрационное имя - username или 
      login и сохраняется специальный пароль - password, соответствующий этому 
      имени. Как правило, при заведении нового пользователя начальное значение 
      пароля для него задает системный администратор. После первого входа в систему 
      пользователь должен изменить начальное значение пароля с помощью специальной 
      команды. В дальнейшем он может изменить свой пароль по собственному желанию 
      в произвольный момент времени.<br>
      <br>
      <b><u>&quot;Узнайте у своего системного администратора&quot;</u></b> регистрационные 
      имена и пароли, установленные для обучающихся.<br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0105"></a>Вход в систему 
      и смена пароля.<br>
      </b></font> <br>
      <font face="Times New Roman, Times, serif" size="3">Настало время первый 
      раз войти в систему. Если у вас в системе установлена графическая оболочка 
      наряду с обычными алфавитно-цифровыми терминалами, лучше всего впервые это 
      сделать с алфавитно-цифрового терминала или его эмулятора. На экране перед 
      вами горит надпись, предлагающая ввести регистрационное имя, как правило 
      - это &quot;login:&quot;. После набора своего регистрационного имени нажмите 
      клавишу &lt;Enter&gt;. Система запросит у вас пароль, соответствующий введенному 
      имени, выдав специальное приглашение - обычно &quot;Password:&quot;. Внимательно 
      наберите пароль, установленный для вас системным администратором, и нажмите 
      клавишу &lt;Enter&gt;. <b>Вводимый пароль не отображается на экране, поэтому 
      делайте это аккуратно!</b> Если все было сделано правильно, у вас на экране, 
      в конечном счете, появится приглашение к вводу команд операционной системы.<br>
      <br>
      Пароль, установленный системным администратором, необходимо сменить на свой 
      собственный. <b><u>&quot;Узнайте у своего системного администратора&quot;</u></b>, 
      какая команда для этого используется на вашей вычислительной системе. В 
      большинстве UNIX-образных систем требуется, чтобы новый пароль имел не менее 
      6-и символов и содержал, по крайней мере, две не буквы и две не цифры. <b><u>&quot;Узнайте 
      у своего системного администратора&quot;</u></b>, какие ограничения на новый 
      пароль существуют в вашей операционной системе. <img border="0" src="../../images/znak.gif" align="left" vspace="8" alt="Nota bene" hspace="10"> 
      Придумайте новый пароль и хорошенько его запомните, а лучше запишите. Пароли 
      в операционной системе хранятся в закодированном виде, и если вы его забыли, 
      никто не сможет помочь вам его вспомнить. Единственное, что может сделать 
      системный администратор, так это установить вам новый пароль. <b><u>&quot;Узнайте 
      у своего системного администратора&quot;</u></b>, какие организационные 
      действия необходимо предпринять, если вы забыли пароль.<br>
      <br>
      Введите команду для смены пароля. Обычно вас попросят сначала ввести старый 
      пароль, затем ввести новый и подтвердить правильность его набора повторным 
      введением. Пароли набирайте аккуратно, так как вводимая информация не отображается 
      на экране. После смены пароля уже никто посторонний не сможет войти в систему 
      под вашим регистрационным именем.<br>
      <br>
      Congratulations!!! Теперь вы полноценные пользователи операционной системы 
      UNIX. <br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0106"></a>Упрощенное 
      понятие об устройстве файловой системы в UNIX. Полные и относительные имена 
      файлов. <br>
      </b></font> <br>
    <p align="JUSTIFY"> <font face="Times New Roman, Times, serif" size="3">В 
      операционной системе UNIX существует три базовых понятия: <i>&quot;процесс&quot;</i>,<i>&quot;файл&quot;</i> 
      и<i> &quot;пользователь&quot;</i>. С понятием &quot;пользователь&quot; вы 
      только что уже столкнулись и будете сталкиваться в дальнейшем при изучении 
      средств защиты информации в операционной системе UNIX. Понятие &quot;процесс&quot; 
      характеризует динамическую сторону происходящего в вычислительной системе 
      и будет подробно обсуждаться на <a href="../../02/l2.htm">лекции 2</a> и 
      на <a href="../../03/prep/sem3-4.htm">следующих семинарах</a>. Понятие &quot;файл&quot; 
      характеризует статическую сторону вычислительной системы.<br>
      <br>
      Из предыдущего опыта работы с вычислительной техникой вы уже имеете некоторое 
      представление о файле, как о некотором именованном наборе данных, хранящегося 
      где-нибудь на магнитных дисках или лентах. Для нашего сегоднящнего обсуждения 
      нам достаточно такого понимания, чтобы упрощенно разобраться в том, как 
      организована работа с файлами в операционной системе UNIX. Более аккуратное 
      рассмотрение понятия &quot;файл&quot; и организации файловых систем для 
      операционных систем в целом будет проведено на <a href="../../11/l11.htm">лекции 
      11</a> и <a href="../../12/l12.htm">лекции 12</a>, а также на <a href="../../11/prep/sem11-12.htm">соответствующих 
      семинарах</a>, посвященных организации файловых систем в UNIX.<br>
      <br>
      Все файлы, которые доступны операционной системе UNIX, как и в уже известных 
      вам операционных системах, объединяются в древовидную логическую структуру. 
      Файлы могут объединяться в <i>каталоги</i> или <i>директории</i>. Не существует 
      файлов, которые не входили бы в состав какой-либо директории. Директории 
      в свою очередь могут входить в состав других директорий. Допускается существование 
      пустых директорий, в которые не входит ни один другой файл, и ни одна другая 
      директория (см. рисунок). Среди всех директорий существует только одна директория, 
      которая не входит в состав других директорий - ее принято называть <i>корневой</i>. 
      На настоящем уровне нашего незнания UNIX мы можем заключить, что в файловой 
      системе UNIX присутствует, по крайней мере, 2 типа файлов: обычные файлы, 
      которые могут содержать тексты программ, исполняемый код, данные и т.д. 
      - их принято называть<i> регулярными файлами</i>, и директории. <br>
      <br>
      </font> 
    <p align="center"><img src="../images/s1-1.jpg" width="356" height="249"><br>
      <br>
    <p align="JUSTIFY"> <font face="Times New Roman, Times, serif" size="3"> Каждому 
      файлу (регулярному или директории) должно быть присвоено имя. В различных 
      версиях операционной системы UNIX существуют различные ограничения на построение 
      имени файла. В стандарте POSIX на интерфейс системных вызовов для операционной 
      системы UNIX содержится лишь три явных ограничения: </font><br>
      <br>
    <ul type="square">
      <li> 
        <p align="JUSTIFY"> <font face="Times New Roman, Times, serif" size="3"> 
          Нельзя создавать имена большей длины, чем это предусмотрено операционной 
          системой (для Linux - 255 символов). </font> 
      </li>
      <li> 
        <p align="JUSTIFY"> <font face="Times New Roman, Times, serif" size="3"> 
          Нельзя использовать символ<b><font color="#008000"> NUL</font></b> (не 
          путать с указателем <b><font color="#008000">NULL</font></b> !) - он 
          же символ с нулевым кодом, он же признак конца строки в языке C. </font> 
      </li>
      <li> 
        <p align="JUSTIFY"> <font face="Times New Roman, Times, serif" size="3"> 
          Нельзя использовать символ '/'. </font> 
      </li>
    </ul>
    <br>
    <p align="JUSTIFY"> <font face="Times New Roman, Times, serif" size="3"> От 
      себя добавим, что также нежелательным является использование символов "звездочка" 
      - '*', "знак вопроса" -'?', "кавычка " -'\"', "апостроф" - '\'', "пробел" 
      - ' &nbsp;' и "обратный слэш" -'\\' (символы записаны в нотации символьных 
      констант языка C). <br>
      <br>
      Единственным исключением из перечисленных правил служит корневая директория, 
      которая <u><b>всегда</b></u> имеет имя "/". Эта же директория по вполне 
      понятным причинам является единственным файлом, обязанным иметь уникальное 
      имя во всей файловой системе. Для всех остальных файлов имена должны быть 
      уникальными только в рамках той директории, в которую они непосредственно 
      входят. Каким же образом отличить два файла с именами &quot;aaa.c&quot;, 
      входящими в директории &quot;b&quot; и &quot;c&quot; на нашем рисунке, чтобы 
      было понятно о каком из них идет речь? Здесь на помощь приходит <i>понятие 
      полного имени файла.</i><br>
      <br>
      Давайте мысленно построим путь от корневой вершины нашего дерева файлов 
      к интересующему нас файлу и выпишем все имена файлов (т.е. узлов дерева), 
      встречающиеся на нашем пути, например, &quot;/ usr b aaa.c&quot;. В этой 
      последовательности первым будет всегда стоять имя корневой директории, а 
      последним - имя интересующего нас файла. Отделим имена узлов друг от друга 
      в этой записи не пробелами, а символами &quot;/&quot;, за исключением имени 
      корневой директории и следующего за ним имени (&quot;/usr/b/aaa.c&quot;). 
      Полученная запись однозначно идентифицирует файл во всей логической конструкции 
      файловой системы. Такая запись и получила название полного имени файла. 
      <br>
      <br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0107"></a>Понятие о 
      текущей директории. Команда pwd. Относительные имена файлов. <br>
      </b></font> <br>
    <p align="JUSTIFY"> <font face="Times New Roman, Times, serif" size="3"> Полные 
      имена файлов могут включать в себя достаточно много имен директорий и быть 
      очень длинными, с ними не всегда удобно работать. Тогда на помощь нам могут 
      прийти понятия <i>текущей</i> или <i>рабочей директории</i> и <i>относительного 
      имени файла</i>. <br>
      <br>
      Для каждой работающей программы в операционной системе, включая командный 
      интерпретатор (shell) , который обрабатывает вводимые вами команды и высвечивает 
      приглашение к их вводу, некоторая директория в логической структуре файловой 
      системы назначается текущей или рабочей для данной программы. Узнать, какая 
      директория является текущей для вашего командного интерпретатора, можно 
      с помощью команды операционной системы <a href="../../man/pwd.htm">pwd</a>. 
      <br>
      <br>
      Зная текущую директорию, мы можем проложить путь по графу файлов от текущей 
      директории к интересующему нас файлу. Запишем последовательность узлов, 
      которые встретятся на этом пути следующим образом. Узел, соответствующий 
      текущей директории в запись не включаем. При движении по направлению к корневому 
      каталогу каждый новый встретившийся узел будем обозначать двумя символами 
      &quot;точка&quot; - &quot;..&quot;, а при движении по направлению от корневого 
      каталога будем записывать имя встретившегося узла. Разделим обозначения, 
      относящиеся к разным узлам в этой записи символами &quot;/&quot;. Полученную 
      строку принято называть относительным именем файла. Относительные имена 
      файлов меняются при смене рабочего каталога. Так, в нашем примере, если 
      рабочий каталог - это директория &quot;/d&quot;, то для файла &quot;/usr/b/aaa.c&quot; 
      его относительное имя будет &quot;../usr/b/aaa.c&quot;, а если рабочий каталог 
      - это директория &quot;/usr/b&quot;, то его относительное имя - &quot;ааа.с&quot;. 
      <br>
      <br>
      Для полноты картины имя текущего каталога можно тоже вставлять в относительное 
      имя файла, обозначая текущий каталог одиночным символом "точка" - ".". Тогда 
      наши относительные имена будут выглядеть как &quot;./../usr/b/aaa.c&quot; 
      и &quot;./aaa.c&quot; соответственно.<br>
      <br>
      Программы, запущенные вами с помощью командного интерпретатора, будут иметь 
      в качестве рабочей директории его рабочую директорию, если вы внутри этих 
      программ не измените ее расположение с помощью специального системного вызова. 
      <br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0108"></a>Домашняя директория 
      пользователя и ее определение.<br>
      </b></font> <br>
    <p align="JUSTIFY"> <font face="Times New Roman, Times, serif" size="3">Для 
      каждого нового пользователя в системе заводится специальная директория, 
      которая становится текущей сразу после входа в систему. Эта директория получила 
      название <i>домашней директории</i> пользователя. Воспользуйтесь командой 
      <a href="../../man/pwd.htm">pwd</a> для определения своей домашней директории.<br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0109"></a>Команда man 
      - универсальный справочник. <br>
      </b></font> <br>
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3"> По ходу изучения операционной 
    системы UNIX вам часто будет требоваться информация о том, что делает та или 
    иная команда или системный вызов, какие у них параметры и опции, для чего 
    предназначены некоторые системные файлы, и каков их формат и т.д. Мы постарались, 
    по мере возможности, занести для большинства используемых в курсе команд и 
    системных вызовов их описания в наш гипертекст, куда вы можете попасть по 
    соответствующим ссылкам (как, например, здесь для команды <a href="../../man/pwd.htm">pwd</a>), 
    однако иногда для полной информации мы отсылаем вас к UNIX Manual - руководству 
    по операционной системе UNIX. К счастью, большинство информации в UNIX Manual 
    доступно для пользователей в интерактивном режиме с помощью утилиты <b><font color="#008000">man</font></b>. 
    Особенно повезло тем пользователям, которые работают в системе ASPLinux, поскольку 
    в ней многие описания переведены на русский язык (правда, встречаются опечатки)! 
    <br>
    <br>
    Пользоваться утилитой man достаточно просто - наберите команду<br>
    <font color="#008000"><b><br>
    </b></font> 
    <dir><b><font color="#008000"> man имя</font></b>, </dir>
    <br>
    </font> 
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> где 
      <b><font color="#008000">имя</font></b> - это имя интересующей вас команды 
      , утилиты, системного вызова, библиотечной функции или файла. Попробуйте 
      с ее помощью посмотреть информацию о команде <a href="../../man/pwd.htm">pwd</a>. 
      <br>
      <br>
      Пролистать страницу полученного описания, если оно все не поместилось на 
      экране, можно нажав клавишу &lt;пробел&gt;. Для прокрутки одной строки воспользуйтесь 
      клавишей &lt;Enter&gt;. Вернуться на страницу назад позволит одновременное 
      нажатие клавиш &lt;Ctrl&gt; и &lt;b&gt;. Выйти из режима просмотра информации 
      можно нажатием клавиши &lt;q&gt;.<br>
      <br>
      Иногда имена команд интерпретатора и системных вызовов или какие-либо еще 
      имена совпадают. Тогда для правильного выбора интересующей вас информации 
      необходимо задать утилите <b><font color="#008000">man</font></b> категорию, 
      к которой относится интересующая вас информация (номер раздела). Деление 
      информации по категориям может слегка отличаться от одной версии UNIX к 
      другой. В Linux, например, принято следующее разделение:<br>
      <br>
      </font> 
    <dir> 
      <ol>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Исполняемые файлы или команды интерпретатора. </font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Системные вызовы. </font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Библиотечные функции. </font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Специальные файлы (обычно файлы устройств) - что это такое, вы узнаете 
            на <a href="../../13/prep/sem13-14.htm">семинарах 13-14</a>.</font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Формат системных файлов и принятые соглашения. </font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Игры (обычно отсутствуют). </font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Макропакеты и утилиты - такие как сам <b><font color="#008000">man</font></b>. 
            </font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Команды системного администратора. </font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Подпрограммы ядра (нестандартный раздел). </font> 
        </li>
        <br>
      </ol>
    </dir>
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3"> Если вы знаете раздел, 
    к которому относится информация, то утилиту <b><font color="#008000">man</font></b> 
    можно вызвать в Linux с дополнительным параметром <br>
    <br>
    <dir> <b><font color="#008000">man номер_раздела имя</font></b>.</dir>
    <br>
    </font> 
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3"> В других операционных 
    системах этот вызов может выглядеть иначе. Для получения точной информации 
    о разбиении на разделы, форме указания номера раздела и дополнительных возможностях 
    утилиты <b><font color="#008000">man</font></b> наберите команду<b> </b><br>
    <br>
    <dir><b><font color="#008000"> man man</font></b> </dir>
    <br>
    </font> 
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> Жаль, 
      что даже в ASPLinux эта информация пока на английском языке.<br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0110"></a>Команды cd 
      - смены текущей директории и ls - просмотра состава директории. <br>
      </b></font> <br>
    <font face="Times New Roman, Times, serif" size="3"> Для смены текущей директории 
    командного интерпретатора можно воспользоваться командой <b><font color="#008000">cd</font></b> 
    от (<b><font color="#008000">c</font></b>hange <b><font color="#008000">d</font></b>irectory). 
    Для этого необходимо набрать команду в виде<br>
    <font color="#008000"><b><br>
    </b></font> 
    <dir><b><font color="#008000">cd имя_директории</font></b>, </dir>
    <br>
    </font> 
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3"> где <b><font color="#008000">имя_директории</font></b> 
    - полное или относительное имя директории, которую вы хотите сделать текущей. 
    Команда <b><font color="#008000">cd</font></b> без параметров сделает текущей 
    директорией вашу домашнюю директорию.<br>
    <br>
    <a name="s0110a"></a>Просмотреть содержимое текущей или любой другой директории 
    можно, воспользовавшись командой <b><font color="#008000">ls</font></b> (от 
    <b><font color="#008000">l</font></b>i<b><font color="#008000">s</font></b>t). 
    Если ввести ее без параметров, эта команда распечатает вам список файлов, 
    находящихся в текущей директории. Если же в качестве параметра задать полное 
    или относительное имя директории:<br>
    <font color="#008000"><b><br>
    </b></font> 
    <dir><b><font color="#008000">ls имя_директории</font></b>, </dir>
    <br>
    </font> 
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3"> она распечатает список 
    файлов в указанной директории. Надо отметить, что в полученный список не войдут 
    файлы, имена которых начинаются с символа &quot;точка&quot; - '.'. Такие файлы 
    обычно создаются различными системными программами для своих целей (например, 
    для настройки их работы). Посмотреть полный список файлов можно, дополнительно 
    указав команде <b><font color="#008000">ls</font></b> опцию<b><font color="#008000"> 
    -a</font></b>, т.е. набрав ее в виде <br>
    <font color="#008000"><b><br>
    </b></font> 
    <dir><b><font color="#008000"> ls -a</font></b> </dir>
    <br>
    или<br>
    <br>
    <dir><font color="#008000"><b>ls -a имя_директории</b></font>. </dir>
    <br>
    </font> 
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> У 
      команды <b><font color="#008000">ls</font></b> существует и много других 
      опций, часть из которых мы рассмотрим на семинарах позже. Для получения 
      полной информации о команде<b><font color="#008000"> ls</font></b> воспользуйтесь 
      утилитой <b><font color="#008000">man</font></b>. <br>
      <br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0111"></a> Путешествие 
      по директорной структуре. <br>
      </b></font> <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> Пользуясь 
      командами <b> <font color="#008000">cd</font></b>, <b><font color="#008000">ls</font></b> 
      и <a href="../../man/pwd.htm">pwd</a> попутешествуйте по директорной структуре 
      вашей операционной системы и порассматривайте ее содержимое. Возможно, зайти 
      в некоторые директории или посмотреть их содержимое вам не удастся. Это 
      связано с работой механизма защиты файлов и директорий, о котором мы поговорим 
      немного позже. Не забудьте в конце путешествия вернуться в вашу домашнюю 
      директорию.<br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0112"></a>Команда cat 
      и создание файла. Перенаправление ввода и вывода.<br>
      </b></font> <br>
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3">Мы умеем перемещаться 
    по логической структуре файловой системы и рассматривать ее содержимое. Хотелось 
    бы уметь еще и просматривать содержимое файлов, и создавать их. Для просмотра 
    содержимого небольшого текстового файла на экране можно воспользоваться командой 
    <b><font color="#008000">cat</font></b>. Если набрать ее в виде <br>
    <font color="#008000"><b><br>
    </b></font> 
    <dir><b><font color="#008000"> cat имя_файла</font></b>, </dir>
    <br>
    </font> 
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3"> то на экран выплеснется 
    все его содержимое. <img border="0" src="../../images/znak.gif" align="left" vspace="8" alt="Nota bene" hspace="10"> 
    <u><b>Внимание! Не пытайтесь рассматривать на экране содержимое директорий 
    - все равно не получится! Не пытайтесь просматривать содержимое неизвестных 
    файлов, особенно если вы не знаете, текстовый он или бинарный. Вывод на экран 
    бинарного файла может привести к непредсказуемому поведению вашего терминала.</b></u> 
    Если даже ваш файл и текстовый, но большой, то все равно вы увидите только 
    его последнюю страницу. Большой текстовый файл удобнее рассматривать с помощью 
    утилиты <b><font color="#008000">more</font></b> (обращайтесь к UNIX Manual 
    для описания ее использования). Команда же <b><font color="#008000">cat</font></b> 
    будет интересна нам с другой точки зрения.<br>
    <br>
    Если мы в качестве параметров для команды <b><font color="#008000">cat</font></b> 
    зададим не одно имя, а имена нескольких файлов<br>
    <font color="#008000"><b><br>
    </b></font> 
    <dir><b><font color="#008000">cat файл1 файл2 ... файлN</font></b>, </dir>
    <br>
    </font> 
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3"> то на экран последовательно 
    выплеснется все их содержимое в указанном порядке. Вывод команды cat можно 
    перенаправить с экрана терминала в какой-нибудь файл, воспользовавшись символом 
    перенаправления выходного потока данных - знаком "больше"- "<font color="#008000"><b>></b></font>". 
    Команда <br>
    <br>
    <dir> <b><font color="#008000">cat файл1 файл2 ... файлN > файл_результата</font></b> 
    </dir>
    <br>
    </font> 
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3"> сольет содержимое всех 
    файлов, чьи имена стоят перед знаком "<font color="#008000"><b>></b></font>", 
    воедино в <b> <font color="#008000">файл_результата</font></b> - конкатенирует 
    их (от слова con<b><font color="#008000">cat</font></b>enate и произошло ее 
    название). Прием перенаправления выходных данных со стандартного потока вывода 
    (экрана) в файл является стандартным для всех команд, выполняемых командным 
    интерпретатором. Вы можете получить файл, содержащий список всех файлов текущей 
    директории, если выполните команду<b><font color="#008000"> ls -a</font></b> 
    с перенаправлением выходных данных <br>
    <br>
    <dir> <b><font color="#008000">ls -a > новый_файл</font></b>. </dir>
    <br>
    </font> 
    <p align="JUSTIFY"> 
    <font face="Times New Roman, Times, serif" size="3"> Если имена входных файлов 
    для команды <b><font color="#008000">cat</font></b> не заданы, то она будет 
    использовать в качестве входных данных информацию, которая будет вводиться 
    с клавиатуры, до тех пор, пока вы не наберете признак окончания ввода - комбинацию 
    клавиш &lt;CTRL&gt; и &lt;d&gt;.<br>
    <br>
    Таким образом, команда <br>
    <br>
    <dir> <b><font color="#008000">cat > новый_файл</font></b> </dir>
    <br>
    </font> 
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> позволяет 
      создать новый текстовый файл с именем <b><font color="#008000">новый_файл</font></b> 
      и содержимым, которое пользователь введет с клавиатуры. У команды <b><font color="#008000">cat</font></b> 
      существует множество различных опций. Посмотреть ее полное описание можно 
      в UNIX Manual.<br>
      <br>
      Заметим, что наряду с перенаправлением выходных данных существует способ 
      перенаправить входные данные. Если во время работы некоторой команды требуется 
      ввод данных с клавиатуры, то можно положить их заранее в файл, а затем перенаправить 
      стандартный ввод этой команды с помощью знака "меньше" - &quot;<font color="#008000"><b>&lt;</b></font>&quot; 
      и следующего за ним имени файла&nbsp;с входными данными. Другие варианты 
      перенаправления потоков данных можно посмотреть в UNIX Manual для вашего 
      командного интерпретатора.<br>
      <br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0113"></a>Создание файла 
      с помощью команды cat.<br>
      </b></font> <br>
      <font face="Times New Roman, Times, serif" size="3"> Убедитесь, что вы находитесь 
      в своей домашней директории, и создайте с помощью команды <b><font color="#008000">cat</font></b> 
      новый текстовый файл. Просмотрите его содержимое. <br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0114"></a>Простейшие 
      команды работы с файлами - cp, rm, mkdir, mv.<br>
      </b></font> <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">Для 
      нормальной работы с файлами необходимо не только уметь создавать файлы, 
      просматривать их содержимое и перемещаться по логическому дереву файловой 
      системы. Нам нужно уметь создавать свои собственные поддиректории, копировать 
      и удалять файлы, переименовывать их. Это минимальный набор операций, без 
      которого нельзя чувствовать себя комфортно. <br>
      <br>
      <a name="s0114a"></a>Для создания новой поддиректории используется команда 
      <b><font color="#008000">mkdir</font></b> (сокращение от <b><font color="#008000">m</font></b>a<b><font color="#008000">k</font></b>e 
      <b> <font color="#008000">dir</font></b>ectory). В простейшем виде команда 
      выглядит следующим образом:<br>
      <br>
      </font> 
    <dir> 
      <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
        <b><font color="#008000">mkdir имя_директории</font></b>, </font> 
    </dir>
    <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> где 
      <b> <font color="#008000">имя_директории</font></b> - полное или относительное 
      имя создаваемой директории. У команды <b><font color="#008000">mkdir</font></b> 
      имеется набор опций, описание которых можно посмотреть с помощью утилиты 
      <b> <font color="#008000">man</font></b>.<br>
      <br>
      Для копирования файлов может быть использована команда <a href="../../man/cp.htm">cp</a> 
      (сокращение от <b> <font color="#008000">c</font></b>o<b><font color="#008000">p</font></b>y). 
      Команда <a href="../../man/cp.htm">сp</a> умеет копировать не только отдельный 
      файл, но и набор файлов, и даже целиком директорию вместе со всеми входящими 
      в нее поддиректориями (рекурсивное копирование). Для задания набора файлов 
      могут использоваться <a href="../../man/shablon.htm">шаблоны имен файлов</a>. 
      Точно также <a href="../../man/shablon.htm">шаблон имени</a> может быть 
      использован и в командах переименования файлов и их удаления, которые мы 
      рассмотрим ниже.<br>
      <br>
      <a name="s0114b"></a>Для удаления файлов или директорий применяется команда<b><font color="#008000"> 
      rm</font></b> (сокращение от <b><font color="#008000">r</font></b>e<b><font color="#008000">m</font></b>ove). 
      Если вы хотите удалить один или несколько регулярных файлов, то простейший 
      вид команды <b><font color="#008000">rm</font></b> выглядит следующим образом: 
      </font><br>
      <br>
    <dir> 
      <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
        <b><font color="#008000">rm файл1 файл2 ... файлN</font></b>, </font> 
    </dir>
    <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">где 
      <b> <font color="#008000">файл1</font></b>, <b><font color="#008000">файл2</font></b>, 
      <b> <font color="#008000">... файлN</font></b> - полные или относительные 
      имена регулярных файлов, которые вы хотите удалить. Вместо непосредственно 
      имен файлов могут использоваться их <a href="../../man/shablon.htm">шаблоны</a>. 
      Если вы хотите удалить одну или несколько директорий вместе с их содержимым 
      (рекурсивное удаление), то к команде добавляется опция <b><font color="#008000">-r</font></b>: 
      </font><br>
      <br>
    <dir> 
      <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
        <b><font color="#008000">rm -r дир1 дир2 ... дирN</font></b>, </font> 
    </dir>
    <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">где 
      <b> <font color="#008000">дир1</font></b>, <b><font color="#008000">дир2</font></b>, 
      <b> <font color="#008000">... дирN</font></b> - полные или относительные 
      имена директорий, которые вы хотите удалить. Вместо непосредственно имен 
      директорий также могут использоваться их <a href="../../man/shablon.htm">шаблоны</a>. 
      У команды <b><font color="#008000">rm</font></b> есть еще набор полезных 
      опций, которые описаны в UNIX Manual. На самом деле процесс удаления файлов 
      не так прост, как кажется на первый взгляд. Более аккуратно он будет рассмотрен 
      нами на <a href="../../11/prep/sem11-12.htm#s110810">семинарах 11-12</a>, 
      когда мы будем подробно обсуждать операции над файлами в операционной системе 
      UNIX.<br>
      <br>
      <img border="0" src="../../images/znak.gif" align="left" vspace="8" alt="Nota bene" hspace="10"> 
      <b>Командой удаления файлов и директорий следует пользоваться с осторожностью. 
      Удаленную информацию восстановить невозможно. Если вы системный администратор 
      и ваша текущая директория - это корневая директория, пожалуйста, не выполняйте 
      команду "<font color="#008000">rm -r *</font>"!</b> <br>
      <br>
      Для переименования файла или его перемещения в другой каталог применяется 
      команда <a href="../../man/mv.htm">mv</a> (сокращение от <b><font color="#008000">m</font></b>o<b><font color="#008000">v</font></b>e). 
      Для задания имен перемещаемых файлов в ней тоже можно использовать их <a href="../../man/shablon.htm">шаблоны</a>.<br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0115"></a>История редактирования 
      файлов - ed, sed, vi.<br>
      </b></font> <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">Полученные 
      знания уже позволяют нам достаточно свободно оперировать с файлами. Но что 
      нам делать, если потребуется изменить содержимое файла, отредактировать 
      его?<br>
      <br>
      Когда появились ранние варианты операционной системы UNIX устройства ввода 
      и отображения информации существенно отличались от существующих сегодня. 
      На клавиатурах присутствовали только алфавитно-цифровые клавиши (не было 
      даже клавиш курсоров), а существовавшие дисплеи делали невозможными экранное 
      редактирование. Поэтому первый редактор операционной системы UNIX - редактор 
      <a href="http://cs.mipt.ru/docs/comp/rus/os/unix/user_guide/unixuser/gl6_1.htm">ed</a> 
      требовал от пользователя строгого указания того, что и как мы будем редактировать 
      с помощью специальных команд. Так, например, для замены первого сочетания 
      символов &quot;ra&quot; на &quot;ru&quot; в одиннадцатой строке редактируемого 
      файла мы должны были бы набрать команду<br>
      <br>
      </font> 
    <dir> 
      <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
        <b><font color="#008000">11 s/ra/ru </font></b></font> 
    </dir>
    <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> Редактор 
      <a href="http://cs.mipt.ru/docs/comp/rus/os/unix/user_guide/unixuser/gl6_1.htm">ed</a> 
      , по-существу, являлся построчечным редактором. Впоследствии появился экранный 
      редактор - <a href="http://cs.mipt.ru/docs/comp/rus/os/unix/user_guide/unixuser/gl7_1.htm">vi</a>, 
      однако и он требовал строгого указания того, что и как в текущей позиции 
      на экране мы должны сделать, или каким образом изменить текущую позицию, 
      с помощью специальных команд, соответствующих алфавитно-цифровым клавишам. 
      Эти редакторы могут показаться вам сейчас странными убогими анахронизмами, 
      но они до сих пор входят в состав всех вариантов UNIX и иногда (например, 
      при работе с удаленной машиной по медленному каналу связи) являются единственным 
      средством, позволяющим удаленно редактировать файл. <br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0116"></a>Система Midnight 
      Commander - mc. Встроенный mc редактор и редактор joe.<br>
      </b></font> <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">Наверное, 
      вы уже убедились в том, что работа в UNIX исключительно на уровне командного 
      интерпретатора и встроенных редакторов далека от уже привычных для вас удобств. 
      Но не все обстоит так плохо. Существует разнообразные пакеты, облегчающие 
      жизнь пользователя в UNIX. К таким пакетам следует отнести Midnight Commander 
      - аналог программ Norton Commander для DOS и FAR для Windows 9x и NT - со 
      своим встроенным редактором, запускаемый командой <b><font color="#008000">mc</font></b>, 
      и экранный редактор <b><font color="#008000">joe</font></b>. Информацию 
      о них вы можете найти в UNIX Manual. Более удобно пользоваться многофункциональным 
      текстовым редактором, например, <a href="http://cs.mipt.ru/docs/comp/rus/os/unix/user_guide/emacs/index.html">emacs</a>.<br>
      &nbsp;<br>
      Войдите в <b><font color="#008000">mc</font></b> и попробуйте в нем походить 
      по директориям, посоздавать и поредактировать файлы.<br>
      <br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0117"></a>Пользователь 
      и группа. Команды chown и chgrp. Права доступа к файлу.<br>
      </b></font> <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">Мы 
      уже говорили ранее, что для входа в операционную систему UNIX каждый пользователь 
      должен быть зарегистрирован в ней под определенным именем. Вычислительные 
      системы не умеют оперировать именами, поэтому каждому имени пользователя 
      в системе соответствует некоторое числовое значение - его идентификатор 
      - <b><font color="#008000">UID</font></b> (User IDentificator).<br>
      <br>
      Все пользователи в системе делятся на группы пользователей. Например, все 
      студенты одной учебной группы могут составлять свою собственную группу пользователей. 
      Группы пользователей также получают свои имена и соответствующие идентификационные 
      номера - <b><font color="#008000">GID</font></b> (Group IDentificator). 
      В некоторых версиях UNIX каждый пользователь может входить ровно в одну 
      группу, в некоторых - в несколько разных групп.<br>
      <br>
      Для каждого файла, созданного в файловой системе запоминаются имена его 
      хозяина и группы хозяев. Заметим, что группа хозяев не обязательно должна 
      быть группой, в которую входит хозяин. В операционной системе Linux при 
      создании файла его хозяином становится пользователь, создавший файл, а его 
      группой хозяев - группа, к которой он принадлежит. Впоследствии хозяин файла 
      или системный администратор может передать его в собственность другому пользователю 
      или изменить его группу хозяев с помощью команд <font color="#008000"><a href="../../man/chown.htm">chown</a></font> 
      и <font color="#008000"><a href="../../man/chgrp.htm">chgrp</a></font>, 
      описание которых можно найти в UNIX Manual.<br>
      <br>
      Как видим, для каждого файла выделяется три категории пользователей: <br>
      <br>
      </font> 
    <dir> 
      <ul type="square">
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Пользователь, являющийся хозяином файла. </font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Пользователи, относящиеся к группе хозяев файла. </font> 
        </li>
        <li> 
          <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> 
            Все остальные пользователи. </font> 
        </li>
      </ul>
    </dir>
    <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> Для 
      каждой из этих категорий пользователей хозяин файла может определить различные 
      права доступа к файлу. Различают три вида прав доступа: право на чтение 
      файла -<b><font color="#008000"> r</font></b> (от слова <b><font color="#008000">r</font></b>ead), 
      право на модификацию файла - <b><font color="#008000">w</font></b> (от слова 
      <b> <font color="#008000">w</font></b>rite) и право на исполнение файла 
      - <b><font color="#008000">x</font></b> (от слова e<b><font color="#008000">x</font></b>ecute). 
      Для регулярных файлов смысл этих прав совпадает с указанным выше. Для директорий 
      он несколько меняется. Право чтения для каталогов позволяет читать имена 
      файлов, находящихся в этом каталоге (и только имена). Поскольку &quot;исполнять&quot; 
      директорию бессмысленно (как, впрочем, и не исполняемый регулярный файл) 
      право доступа на исполнение для директорий меняет смысл: наличие этого права 
      позволяет получить дополнительную информацию о файлах, входящих в каталог: 
      их размер, кто их хозяин, дата создания и т.д. Право на исполнение также 
      требуется для директории, чтобы сделать ее текущей, а также для всех директорий 
      по пути к указанной. Право записи для директории позволяет изменять ее содержимое: 
      создавать и удалять в ней файлы, переименовывать их. Отметим, что для удаления 
      файла достаточно иметь право записи для директории, в которую непосредственно 
      входит данный файл, независимо от прав доступа к самому файлу.<br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0118"></a>Команда ls 
      с опциями -al. Использование команд chmod и umask.<br>
      </b></font> <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">Посмотреть 
      подробную информацию о файлах в некоторой директории, включая имена хозяина, 
      группы хозяев и права доступа, можно с помощью уже известной нам команды 
      <b> <font color="#008000">ls</font></b> с опциями <b><font color="#008000">-al</font></b>. 
      В выдаче этой команды третья колонка слева содержит имена пользователей 
      хозяев файлов, а четвертая колонка слева - имена групп хозяев файла. Самая 
      левая колонка содержит типы файлов и права доступа к ним. Тип файла определяет 
      первый символ в наборе символов. Если это символ '<b><font color="#008000">d</font></b>' 
      - то тип файла - директория, если там стоит символ '<b><font color="#008000">-</font></b>', 
      то это - регулярный файл. Следующие три символа определяют права доступа 
      для хозяина файла, следующие три - для пользователей, входящих в группу 
      хозяев файла, и последние три - для всех остальных пользователей. Наличие 
      символа (<b><font color="#008000">r</font></b>, <b><font color="#008000">w</font></b> 
      или<b><font color="#008000"> x</font></b>), соответствующего праву, для 
      некоторой категории пользователей означает, что данная категория пользователей 
      обладает этим правом.<br>
      <br>
      Вызовите команду <b><font color="#008000">ls -al</font></b> для своей домашней 
      директории и проанализируйте ее выдачу. Хозяин файла может изменять права 
      доступа к нему, пользуясь командой <a href="../../man/chmod.htm">chmod</a>.<br>
      <br>
      Создайте новый файл и посмотрите на права доступа к нему, установленные 
      системой при его создании. Чем руководствуется операционная система при 
      выставлении этих прав? Для этого она использует <a href="../../man/umask3.htm">маску 
      создания файлов</a> для программы, которая файл создает. Изначально для 
      программы-оболочки она имеет некоторое значение по умолчанию. Изменить текущее 
      значение маски для программы-оболочки или посмотреть его можно с помощью 
      команды <a href="../../man/umask1.htm">umask</a>. Если вы хотите изменить 
      его для Midnight Commander, необходимо выйти из <b><font color="#008000">mc</font></b>, 
      выполнить команду <a href="../../man/umask1.htm">umask</a> и запустить <b><font color="#008000">mc</font></b> 
      снова. Маска создания файлов не сохраняется между сеансами работы в системе. 
      При новом входе в систему значение маски снова будет установлено по умолчанию.<br>
      <br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0119"></a>Системные 
      вызовы getuid и getgid. <br>
      </b></font> <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">Узнать 
      идентификатор пользователя, запустившего программу на исполнение, - <b><font color="#008000">UID 
      </font></b> и идентификатор группы, к которой он относится, - <b><font color="#008000">GID</font></b> 
      можно с помощью системных вызовов <a href="../../man/getuid.htm">getuid()</a> 
      и <a href="../../man/getuid.htm">getgid()</a>, применив их внутри этой программы.<br>
      &nbsp;<br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0120"></a>Компиляция 
      программ на языке C в UNIX и запуск их на счет.<br>
      </b></font> <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">Теперь 
      мы практически созрели для того, чтобы написать первую программу в нашем 
      курсе. Осталось только научиться компилировать программы на языке C и запускать 
      их на счет. <img border="0" src="../../images/znak.gif" align="left" vspace="8" alt="Nota bene" hspace="10"> 
      Для компиляции программ в Linuх мы будем применять компилятор <b> <font color="#008000">gcc</font></b>. 
      <u><b>Для того, чтобы он нормально работал, необходимо, чтобы исходные файлы, 
      содержащие текст программы, имели имена, заканчивающиеся на</b> <b><font color="#008000">.c</font></b></u>. 
      В простейшем случае откомпилировать программу можно, запустив компилятор 
      командой <br>
      <br>
      </font> 
    <dir> 
      <p align="JUSTIFY"><b><font face="Times New Roman, Times, serif" size="3" color="#008000"> 
        gcc имя_исходного_файла</font></b><font face="Times New Roman, Times, serif" size="3">. 
        </font> 
    </dir>
    <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> Если 
      программа была написана без ошибок, то компилятор создаст исполняемый файл 
      с именем <b><font color="#008000">a.out</font></b>. Изменить имя создаваемого 
      исполняемого файла &nbsp;можно, задав его с помощью опции <b><font color="#008000">-o</font></b> 
      :<br>
      <br>
      </font> 
    <dir> 
      <p align="JUSTIFY"><b><font face="Times New Roman, Times, serif" size="3" color="#008000"> 
        gcc имя_исходного_файла -o имя_исполняемого_файла</font></b><font face="Times New Roman, Times, serif" size="3">. 
        </font> 
    </dir>
    <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3"> Компилятор 
      gcc имеет несколько сотен возможных опций. Получить информацию о них вы 
      можете в UNIX Manual.<br>
      <br>
      <b><u>&quot;Узнайте у своего системного администратора&quot;,</u></b> как 
      называется компилятор для вашей операционной системы и какие опции он имеет.<br>
      <br>
      Запустить программу на исполнение можно, набрав имя исполняемого файла и 
      нажав клавишу &lt;Enter&gt;. <br>
      <br>
      </font> 
  </LI>
  <LI> 
    <p align="JUSTIFY"><font color="#FF0000"><b><a name="s0121"></a>Написание, 
      компиляция и запуск программы c использованием системных вызовов getuid() 
      и getgid().<br>
      </b></font> <br>
    <p align="JUSTIFY"><font face="Times New Roman, Times, serif" size="3">
      Напишите, откомпилируйте и запустите программу, которая печатала бы идентификатор 
      пользователя, запустившего программу, и идентификатор его группы.<br>
      &nbsp;<br>
      </font> 
  </LI>
</ol>
  
  <P align="center"><a href="../../os.html">Программа курса</a> | 
 <a href="../../03/prep/sem3-4.htm"> Следующий семинар</a></P>
</BODY>
</HTML>
